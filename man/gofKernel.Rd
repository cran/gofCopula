% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tests_Kernel.R
\name{gofKernel}
\alias{gofKernel}
\title{2 dimensional gof test of Scaillet (2007)}
\usage{
gofKernel(
  copula = c("normal", "t", "clayton", "gumbel", "frank", "joe", "amh", "galambos",
    "huslerReiss", "tawn", "tev", "fgm", "plackett"),
  x,
  param = 0.5,
  param.est = TRUE,
  df = 4,
  df.est = TRUE,
  margins = "ranks",
  flip = 0,
  M = 1000,
  MJ = 100,
  dispstr = "ex",
  delta.J = 0.5,
  nodes.Integration = 12,
  lower = NULL,
  upper = NULL,
  seed.active = NULL,
  processes = 1
)
}
\arguments{
\item{copula}{The copula to test for. Possible are \code{"normal"}, 
\code{"t"}, \code{"clayton"}, \code{"gumbel"}, \code{"frank"}, \code{"joe"}, 
\code{"amh"}, \code{"galambos"}, \code{"huslerReiss"}, \code{"tawn"}, 
\code{"tev"}, \code{"fgm"} and \code{"plackett"}.}

\item{x}{A matrix containing the data with rows being observations and
columns being variables.}

\item{param}{The parameter to be used.}

\item{param.est}{Shall be either \code{TRUE} or \code{FALSE}. \code{TRUE}
means that \code{param} will be estimated with a maximum likelihood
estimation.}

\item{df}{Degrees of freedom, if not meant to be estimated. Only necessary
if tested for \code{"t"}-copula.}

\item{df.est}{Indicates if \code{df} shall be estimated. Has to be either
\code{FALSE} or \code{TRUE}, where \code{TRUE} means that it will be
estimated.}

\item{margins}{Specifies which estimation method for the margins shall be
used. The default is \code{"ranks"}, which is the standard approach to
convert data in such a case. Alternatively the following distributions can
be specified: \code{"beta"}, \code{"cauchy"}, Chi-squared (\code{"chisq"}),
\code{"f"}, \code{"gamma"}, Log normal (\code{"lnorm"}), Normal
(\code{"norm"}), \code{"t"}, \code{"weibull"}, Exponential (\code{"exp"}).
Input can be either one method, e.g. \code{"ranks"}, which will be used for
estimation of all data sequences. Also an individual method for each margin
can be specified, e.g. \code{c("ranks", "norm", "t")} for 3 data sequences.
If one does not want to estimate the margins, set it to \code{NULL}.}

\item{flip}{The control parameter to flip the copula by 90, 180, 270 degrees
clockwise. Only applicable for bivariate copula. Default is 0 and possible 
inputs are 0, 90, 180, 270 and NULL.}

\item{M}{Number of bootstrapping loops.}

\item{MJ}{Size of bootstrapping sample.}

\item{dispstr}{A character string specifying the type of the symmetric
positive definite matrix characterizing the elliptical copula. Implemented
structures are "ex" for exchangeable and "un" for unstructured, see package
\code{copula}.}

\item{delta.J}{Scaling parameter for the matrix of smoothing parameters.}

\item{nodes.Integration}{Number of knots of the bivariate Gauss-Legendre
quadrature.}

\item{lower}{Lower bound for the maximum likelihood estimation of the copula
parameter. The constraint is also active in the bootstrapping procedure. The
constraint is not active when a switch to inversion of Kendall's tau is
necessary. Default \code{NULL}.}

\item{upper}{Upper bound for the maximum likelihood estimation of the copula
parameter. The constraint is also active in the bootstrapping procedure. The
constraint is not active when a switch to inversion of Kendall's tau is
necessary. Default \code{NULL}.}

\item{seed.active}{Has to be either an integer or a vector of M+1 integers.
If an integer, then the seeds for the bootstrapping procedure will be
simulated. If M+1 seeds are provided, then these seeds are used in the
bootstrapping procedure. Defaults to \code{NULL}, then \code{R} generates
the seeds from the computer runtime. Controlling the seeds is useful for
reproducibility of a simulation study to compare the power of the tests or
for reproducibility of an empirical study.}

\item{processes}{The number of parallel processes which are performed to
speed up the bootstrapping. Shouldn't be higher than the number of logical
processors. Please see the details.}
}
\value{
An object of the \code{class} gofCOP with the components
\item{method}{a character which informs about the performed analysis}
\item{copula}{the copula tested for} \item{margins}{the method used to
estimate the margin distribution.} \item{param.margins}{the parameters of
the estimated margin distributions. Only applicable if the margins were not
specified as \code{"ranks"} or \code{NULL}.} \item{theta}{dependence
parameters of the copulae} \item{df}{the degrees of freedem of the copula.
Only applicable for t-copula.} \item{res.tests}{a matrix with the p-values
and test statistics of the hybrid and the individual tests}
}
\description{
\code{gofKernel} tests a 2 dimensional dataset with the Scaillet test for a
copula. The possible copulae are \code{"normal"}, \code{"t"}, 
\code{"clayton"}, \code{"gumbel"}, \code{"frank"}, \code{"joe"}, 
\code{"amh"}, \code{"galambos"}, \code{"huslerReiss"}, \code{"tawn"}, 
\code{"tev"}, \code{"fgm"} and \code{"plackett"}. The parameter
estimation is performed with pseudo maximum likelihood method. In case the
estimation fails, inversion of Kendall's tau is used. The approximate
p-values are computed with a parametric bootstrap, which computation can be
accelerated by enabling in-build parallel computation.
}
\details{
The Scaillet test is a kernel-based goodness-of-fit test with a fixed
smoothing parameter. For the copula density \eqn{c(\mathbf{u}, \theta)}{c(u,
theta)}, the corresponding kernel estimator is given by
\deqn{c_n(\mathbf{u}) = \frac{1}{n} \sum_{i=1}^n K_H[\mathbf{u} - (U_{i1},
\dots, U_{id})^{\top}], }{c_n(u) = 1/n sum(K_H[u - (U[i1], ..., U[id])^T],
i=1 ,..., n), } where \eqn{U_{ij}}{U[ij]} for \eqn{i = 1, \dots,n}{i = 1,
...,n}; \eqn{j = 1, \dots,d}{j = 1, ...,d} are the pseudo observations,
\eqn{\mathbf{u} \in [0,1]^d}{u in [0,1]^d} and \eqn{K_H(y) =
K(H^{-1}y)/\det(H)}{KH(y) = K(H^(-1)y)/det(H)} for which a bivariate
quadratic kernel is used, as in Scaillet (2007). The matrix of smoothing
parameters is \eqn{H = 2.6073n^{-1/6} \hat{\Sigma}^{1/2}}{H = 2.6073n^{-1/6}
{Sigma_hat}^{1/2}} with \eqn{\hat{\Sigma}}{Sigma_hat} the sample covariance
matrix.  The test statistic is then given by \deqn{T = \int_{[0,1]^d}
\{c_n(\mathbf{u}) - K_H * c(\mathbf{u}, \theta_n)\} \omega(\mathbf{u}) d
\mathbf{u}, }{int_([0,1]^d) {c_n(u) - K_H * c(u, theta_n)} omega(u) d u,}
where \eqn{*}{*} denotes the convolution operator and \eqn{\omega}{omega} is
a weight function, see Zhang et al. (2015). The bivariate Gauss-Legendre
quadrature method is used to compute the integral in the test statistic
numerically, see Scaillet (2007).

The approximate p-value is computed by the formula \deqn{\sum_{b=1}^M
\mathbf{I}(|T_b| \geq |T|) / M,}{sum(|T[b]| >= |T|, b=1, .., M) / M,}

For small values of \code{M}, initializing the parallelisation via
\code{processes} does not make sense. The registration of the parallel
processes increases the computation time. Please consider to enable
parallelisation just for high values of \code{M}.
}
\examples{

data(IndexReturns2D)

gofKernel("normal", IndexReturns2D, M = 5, MJ = 5)

}
\references{
Zhang, S., Okhrin, O., Zhou, Q., and Song, P.. Goodness-of-fit
Test For Specification of Semiparametric Copula Dependence Models.
\emph{Journal of Econometrics, 193, 2016, pp. 215-233}
\doi{10.1016/j.jeconom.2016.02.017} \cr \cr Scaillet, O.
(2007). Kernel based goodness-of-fit tests for copulas with fixed smoothing
parameters. \emph{Journal of Multivariate Analysis, 98:533-543}
}
