% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tests_gofco.R
\name{gofco}
\alias{gofco}
\title{Interface with copula class}
\usage{
gofco(
  copulaobject,
  x,
  tests = c("gofPIOSRn", "gofKernel"),
  customTests = NULL,
  margins = "ranks",
  flip = 0,
  M = 1000,
  MJ = 100,
  dispstr = "ex",
  m = 1,
  delta.J = 0.5,
  nodes.Integration = 12,
  lower = NULL,
  upper = NULL,
  seed.active = NULL,
  processes = 1
)
}
\arguments{
\item{copulaobject}{An object with of class \code{copula} from the copula
package.}

\item{x}{A matrix containing the data with rows being observations and
columns being variables.}

\item{tests}{A character vector which indicates the tests to use. Possible
choices are the individual tests implemented in this package.}

\item{customTests}{A character vector which indicates the customized test to
use, if any. The test has to be loaded into the workspace. Currently the
function containing the test has to have 2 arguments, the first one for the
dataset and the second one for the copula to test for. The arguments have to
be named "x" and "copula" respectively.}

\item{margins}{Specifies which estimation method for the margins shall be
used. The default is \code{"ranks"}, which is the standard approach to
convert data in such a case. Alternatively can the following distributions
be specified: \code{"beta"}, \code{"cauchy"}, Chi-squared (\code{"chisq"}),
\code{"f"}, \code{"gamma"}, Log normal (\code{"lnorm"}), Normal
(\code{"norm"}), \code{"t"}, \code{"weibull"}, Exponential (\code{"exp"}).
Input can be either one method, e.g. \code{"ranks"}, which will be used for
estimation of all data sequences. Also an individual method for each margin
can be specified, e.g. \code{c("ranks", "norm", "t")} for 3 data sequences.
If one does not want to estimate the margins, set it to \code{NULL}.}

\item{flip}{The control parameter to flip the copula by 90, 180, 270 degrees
clockwise. Only applicable for bivariate copula. Default is 0 and possible 
inputs are 0, 90, 180, 270 and NULL.}

\item{M}{Number of bootstrapping samples in the single tests.}

\item{MJ}{Size of bootstrapping sample. Only necessary if the test
\code{gofKernel} is part of \code{testset}.}

\item{dispstr}{A character string specifying the type of the symmetric
positive definite matrix characterizing the elliptical copula. Implemented
structures are "ex" for exchangeable and "un" for unstructured, see package
\code{copula}.}

\item{m}{Length of blocks. Only necessary if the test \code{gofPIOSTn} is
part of \code{testset}.}

\item{delta.J}{Scaling parameter for the matrix of smoothing parameters.
Only necessary if the test \code{gofKernel} is part of \code{testset}.}

\item{nodes.Integration}{Number of knots of the bivariate Gauss-Legendre
quadrature. Only necessary if the test \code{gofKernel} is part of
\code{testset}.}

\item{lower}{Lower bound for the maximum likelihood estimation of the copula
parameter. The constraint is also active in the bootstrapping procedure. The
constraint is not active when a switch to inversion of Kendall's tau is
necessary. Default \code{NULL}.}

\item{upper}{Upper bound for the maximum likelihood estimation of the copula
parameter. The constraint is also active in the bootstrapping procedure. The
constraint is not active when a switch to inversion of Kendall's tau is
necessary. Default \code{NULL}.}

\item{seed.active}{Has to be either an integer or a vector of M+1 integers.
If an integer, then the seeds for the bootstrapping procedure will be
simulated. If M+1 seeds are provided, then these seeds are used in the
bootstrapping procedure. Defaults to \code{NULL}, then \code{R} generates
the seeds from the computer runtime. Controlling the seeds is useful for
reproducibility of a simulation study to compare the power of the tests or
for reproducibility of an empirical study.}

\item{processes}{The number of parallel processes which are performed to
speed up the bootstrapping. Shouldn't be higher than the number of logical
processors.}
}
\value{
An object of the \code{class} gofCOP with the components
\item{method}{a character which informs about the performed analysis}
\item{copula}{the copula tested for} \item{margins}{the method used to
estimate the margin distribution.} \item{param.margins}{the parameters of
the estimated margin distributions. Only applicable if the margins were not
specified as \code{"ranks"} or \code{NULL}.} \item{theta}{dependence
parameters of the copulae} \item{df}{the degrees of freedem of the copula.
Only applicable for t-copula.} \item{res.tests}{a matrix with the p-values
and test statistics of the hybrid and the individual tests}
}
\description{
\code{\link{gofco}} is an interface with the \code{copula} package. It reads
out the information from a copula class object and hands them over to a
specified gof test or set of tests.
}
\details{
The function reads out the arguments in the copula class object. If the
dependence parameter is not specified in the object, it is estimated. In
case that the object describes a "t"-copula, then the same holds for the
degrees of freedom. The dimension is not extracted from the object. It is
obtained from the inserted dataset.

When more than one test shall be performed, the hybrid test is computed too.

For small values of \code{M}, initializing the parallelisation via
\code{processes} does not make sense. The registration of the parallel
processes increases the computation time. Please consider to enable
parallelisation just for high values of \code{M}.
}
\examples{

data(IndexReturns2D)
copObject = normalCopula(param = 0.5)

gofco(copObject, x = IndexReturns2D, tests = c("gofPIOSRn", "gofKernel"), 
      M = 20)

}
\references{
Yan, Jun. Enjoy the joy of copulas: with a package copula.
Journal of Statistical Software 21.4 (2007): 1-21.
}
